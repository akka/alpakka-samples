language: scala
jdk: openjdk8

jobs:
  include:
    - script: cd alpakka-sample-ftp-to-file && sbt compile
      name: Compile Alpakka FTP to file sample
    - script: cd alpakka-sample-http-csv-to-kafka && sbt compile
      name: Compile Alpakka Http Csv Kafka sample
    - script: cd alpakka-sample-jdbc-to-elasticsearch && sbt compile
      name: Compile Alpakka JDBC to Elasticsearch sample
    - script: cd alpakka-sample-jms && sbt compile
      name: Compile Alpakka JMS samples
    - script: cd alpakka-sample-kafka-to-elasticsearch && sbt compile
      name: Compile Alpakka Kafka to Elasticsearch sample
    - script: cd alpakka-sample-mqtt-to-kafka && sbt compile
      name: Compile MQTT to Kafka sample
    - script: cd alpakka-sample-file-to-elasticsearch && sbt compile
      name: Compile Alpakka File to Elasticsearch sample
    - script: cd alpakka-sample-mqtt-http-to-s3-java && sbt compile
      name: Compile Alpakka Mqtt Http S3 sample
    - script: cd alpakka-sample-sqs-java && sbt compile
      name: Compile Alpakka Sqs Java sample
    - script: cd alpakka-sample-rotate-logs-to-ftp && sbt compile
      name: Compile Rotate logs to FTP sample
    - script: cd docs && sbt makeSite
      name: Build documentation website

    - stage: publish
      script: eval "$(ssh-agent -s)" && cp .travis/id_rsa /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-keygen -p -P "$DEPLOY_PASSPHRASE" -N "" -f /tmp/id_rsa && ssh-add /tmp/id_rsa && cd docs && sbt ghpagesPushSite

stages:
  - name: test
  # runs on main repo master commits
  - name: publish
    if: repo = akka/alpakka-samples AND branch = master AND type = push

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot
    - $HOME/.sbt/launchers

env:
  global:
    # travis encrypt DEPLOY_PASSPHRASE=...
    - secure: "uoQV67/O+vpfM2P5E4WGVTkl/8c76p2SCIXkFXoiO0LhwAOju/xzDyqAIav6UeA+0LvlPmlKybcU8pM3qUF4zYG/Xk5ByFj6OHCZJcAj3sXZItfSjet38BV9D8KbpitAykMk2q01cazs3LVHFsCh5qbjwK8FFsPNlR5njN8Z/KKr1UMBBDMtoDsLnEu+/ylbHSHDYdfQKiDQwWGbLmmShWyunxygyX1VNFETqqpVMvM5yWcDyW+IqdBmENycm72NuPdTHLlhPFOMSgMCfSuctSZgA32xHNGhw12AAfsKe2pOGNjh5UMLGJXZALK/T0uUDlpP+KCAq8JaU4krygievRAtGndJm3rrFzm7Q5ftxgIrhwXvyGUC3S3cXMufLughgNnc88VagsBb3jIsGE+LQrGuDscLVF4T1oZoxGsEYsO8jXiJw9268M7HPA3poUXCi5x6unGPaNvIPYVNihp1oCZz13VrCIDZYqlf7jLVmvElHLNZPTWhBkXncmoSmZBkN0dV8144iY/BOXYkPePa+4qx+7882HjO0IHgETllZFALL37JiLs3FNWdfLkdzEo24gkz1iUIFjesReMC5ifeTH87kq7WJlsDskgdhOsCDYRYJM26xUsHkmoL5C9grIigsYl+icuAQcCOWecw17sxlbxxQSbMVrkSGGrIy6YN8cA="
